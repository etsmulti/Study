scout mini 설정 방법


    1  ibus-setup
    2  ibsu-setup
    3  /bin/python3 /home/min/catkin_ws/src/test.py
    4  . code
    5  /bin/python3 /home/min/catkin_ws/src/qrcore.py
    6  ibus-setup
    7  sudo apt-get install terminator
    8  ls
    9  python -V
   10  python3 -V
   11  ls
   12  sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
   13  sudo apt install curl # if you haven't already installed curl
   14  curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
   15  sudo apt update
   16  sudo apt install ros-noetic-desktop-full
   17  sudo apt install ros-noetic-slam-gmapping
   18  apt search ros-noetic
   19  echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
   20  source ~/.bashrc
   21  sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
   22  sudo apt install python3-rosdep
   23  sudo rosdep init
   24  rosdep update
   25  cd
   26  mkdir catkin_ws
   27  ls
   28  cd catkin_ws
   29  mkdir src
   30  catkin_make
   31  ls
   32  sudo apt-get install libzbar0
   33  pip install pyzbar
   34  sudo apt install python3-pip
   35  pip install numpy
   36  pip install opencv-python
   37  pip install pyzbar
   38  ls
   39  mkdir github
   40  cd github
   41  git clone https://github.com/etsmulti/yh_ros.git
   42  ls
   43  cd yh_ros
   44  ls
   45  cd..
   46  cd ..
   47  git clone https://github.com/etsmulti/Study.git
   48  ls
   49  cs
   50  cm
   51  cs
   52  gedit ~/.bashrc
   53  cs
   54  source ~/.bashrc
   55  cs
   56  cm
   57  ls
   58  pip list
   59  pip install tensorflow
   60  pip install mediapipe
   61  pip install cvzone
   62  pip list
   63  sudo apt update
   64  cs
   65  cm
   66  ls
   67  python -V
   68  python3 -V
   69  which python
   70  which python3
   71  cs
   72  roscore
   73  rosrun yh_turtle turtle_goal.py
   74  cs
   75  roscore
   76  rosrun turtlesim turtlesim_node
   77  cs
   78  rosrun yh_turtle turtle_triangle.py
   79  rosrun yh_turtle turtle_triangle.py 3
   80  cs
   81  ls
   82  cd yh_turtle
   83  ls
   84  cd src
   85  ls
   86  chmod +x *
   87  ls
   88  cd ..
   89  ls
   90  cd vision
   91  ls
   92  cd scripts
   93  ls
   94  chmod +x *
   95  ls
   96  cd ..
   97  ls
   98  /usr/bin/python
   99  cs
  100  roscore
  101  udo apt-get update
  102  sudo apt-get update
  103  sudo apt-get upgrade
  104  ls
  105  cs
  106  ls
  107  cm
  108  cs
  109  cm
  110  sudo apt install ros-noetic-turtlebot3-msgs ros-noetic-turtlebot3-gazebo
  111  cs
  112  cm
  113  ls
  114  cs
  115  ls
  116  ls
  117  cd videos
  118  ls
  119  cs
  120  ls
  121  git clone https://github.com/ROBOTIS-GIT/turtlebot3.git
  122  ls
  123  export TURTLEBOT3_MODEL=waffle
  124  echo $TURTLEBOT3_MODEL
  125  eb
  126  roslaunch turtlebot3_gazebo turtlebot3_world.launch
  127  rosrun teleop_twist_keyboard teleop_twist_keyboard.py
  128  cs
  129  rosrun teleop_twist_keyboard teleop_twist_keyboard.py
  130  rosrun rviz rviz
  131  rosrun 
  132  sudo apt-get install ros-noetic-teleop-twist-keyboard
  133  rosrun teleop_twist_keyboard teleop_twist_keyboard.py
  134  python -V
  135  python3 -V
  136  ls
  137  cs
  138  cm
  139  cd
  140  sudo apt-get install ros-noetic-webots-ros
  141  cs
  142  cm
  143  cs
  144  cm
  145  ls
  146  cd src
  147  ls
  148  cd scout_mini_ros-master
  149  ls
  150  scout_mini_ros-master
  151  cs
  152  clear
  153  cm
  154  ls
  155  cd src
  156  ls
  157  cd scout_mini_ros-master
  158  ls
  159  cs
  160  /bin/python3 /home/min/catkin_ws/src/vision/scripts/qrcode.py
  161  ls
  162  cd github
  163  ls
  164  cd librealsense25
  165  ls
  166  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
  167  sudo add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u
  168  sudo apt-get install librealsense2-dkms
  169  sudo apt-get install librealsense2-utils
  170  sudo apt-get install librealsense2-dev
  171  sudo apt-get install librealsense2-dbg
  172  realsense-viewer
  173  sudo apt-get update
  174  sudo apt-get upgrade
  175  cs
  176  cm
  177  realsense-view
  178  cs
  179  cd
  180  sudo apt-get install ros-$ROS_DISTRO-realsense2-camera
  181  cs
  182  git clone https://github.com/IntelRealSense/realsense-ros.git
  183  cd realsense-ros/
  184  git checkout `git tag | sort -V | grep -P "^2.\d+\.\d+" | tail -1`
  185  cd ..
  186  catkin_init_workspace
  187  cd ..
  188  catkin_make clean
  189  echo "source ~/catkin_ws/devel/setup.bash" >> ~/.bashrc
  190  sb
  191  roslaunch realsense2_camera rs_camera.launch
  192  clear
  193  roslaunch realsense2_camera rs_camera.launch
  194  rostopic list
  195  rostopic echo /tf
  196  rostopic echo /diagnostics
  197  realsense-viewer
  198  c
  199  cs
  200  roslaunch realsense2_camera rs_camera.launch filters:=pointcloud
  201  rosrun rviz rviz
  202  rostopic
  203  rostopic list
  204  cs
  205  roslaunch scout_base scout_base.launch
  206  cm
  207  roslaunch scout_base scout_base.launch
  208  cs
  209  roslaunch scout_bringup scout_mininal.launch
  210  roslaunch scout_bringup scout_robot_base.launch 
  211  cm
  212  roslaunch scout_bringup scout_robot_base.launch 
  213  roslaunch scout_bringup scout_teleop_keyboard.launch
  214  rostopic list
  215  rqt_graph
  216  roslaunch scout_base scout_base.launch
  217  candump can0
  218  sudo apt install can-utils
  219  candump can0
  220  roslaunch scout_base scout_base.launch
  221  candump can0
  222  ifcongig
  223  ifcongig -a
  224  ifcongig
  225  candump can0
  226  cs
  227  roslaunch scout_base scout_base.launch
  228  candump can0
  229  cs
  230  roslaunch scout_base scout_base.launch
  231  candump can0
  232  history
  233  cs
  234  sudo modprobe gs_usb
  235  rosrun scout_bringup setup_can2usb.bash
  236  rosrun scout_bringup bringup_can2usb.bash
  237  cs
  238  rosrun scout_bringup setup_can2usb.bash
  239  rosrun scout_bringup bringup_can2usb.bash
  240  receiving data from can0
  241  candump can0
  242  history
  243  sudo modprobe gs_usb
  244  rosrun scout_bringup setup_can2usb.bash
  245  rosrun scout_bringup bringup_can2usb.bash
  246  cs
  247  git clone https://github.com/agilexrobotics/ugv_sdk.git 
  248  cm
  249  cs
  250  cm
  251  cs
  252  sudo modprobe gs_usb
  253  rosrun scout_bringup setup_can2usb.bash
  254  rosrun scout_bringup bringup_can2usb.bash
  255  sudo usermod -a -G dialout $USER
  256  sudo modprobe gs_usb
  257  sudo ip link set can0 up type can bitrate 500000
  258  sudo apt install can-utils
  259  ifconfig -a
  260  sudo apt install net-tools
  261  ifconfig -a
  262  sudo ip link set can0 up type can bitrate 500000
  263  receiving data from can0
  264  sudo apt install ros-noetic-webots-ros
  265  sudo ip link set can0 up type can bitrate 500000
  266  ifconfig can0 up
  267  apk add /config/python_scripts/canutils.apk
  268  slcand -o -c -s4 /dev/ttyUSB0 can0
  269  ifconfig can0 txqueuelen 1000
  270  ifconfig can0 up
  271  slcand
  272  slcand -o -c -f -s6 ttyUSB0 can0
  273  ifconfig can0 up
  274  slcand -o -c -f -s4 /dev/ttyUSB0 can0
  275  ifconfig can0 up
  276  sudo ip link set can0 up type can bitrate 500000
  277  slcand -o -c -f -s4 /dev/ttyUSB0 can0
  278  sudo ip link set can0 up type can bitrate 500000
  279  cs
  280  rosrun rqt_robot_monitor rqt_robot_monitor
  281  roscore
  282  cm
  283  roslaunch scout_base scout_base.launch
  284  rosrun rqt_robot_monitor rqt_robot_monitor
  285  ifconfig -a
  286  ls
  287  cd realsense-ros
  288  ls
  289  cd ..
  290  cs
  291  rosrun scout_base scout_base_node
  292  roslaunch scout_base scout_base.launch
  293  rosrun rqt_robot_monitor rqt_robot_monitor
  294  cs
  295  ls
  296  sudo usermod -a -G dialout $USER
  297  sudo modprobe gs_usb
  298  ls
  299  sudo ip link set can0 up type can bitrate 500000
  300  ifconfig -a
  301  sudo apt install can-utils
  302  sudo apt install ros-noetic-teleop-twist-keyboard
  303  sudo apt-get install ros-noetic-joint-state-publisher-gui
  304  sudo apt install ros-noetic-ros-controllers
  305  git clone -b scout_v2 --depth 1 https://github.com/agilexrobotics/scout_ros.git
  306  git clone -b scout_v2 --depth 1 https://github.com/agilexrobotics/agx_sdk.git
  307  git clone -b scout_v2 --depth 1 https://github.com/agilexrobotics/scout_ros.git
  308  ls
  309  cd ..
  310  cm
  311  cs
  312  ls
  313  cs
  314  cm
  315  cs
  316  roslaunch scout_base scout_base.launch
  317  gedit ~/.bashrc
  318  roslaunch scout_base scout_base.launch
  319  rqt_graph
  320  history
  

.bashrc 원격제어 지원

  
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
source /opt/ros/noetic/setup.bash
source ~/catkin_ws/devel/setup.bash

# 아래 alias 세줄은 명령어 설정이다. (우리가 폴더 위치를 편하게 이동하기 위해)(cw,cs,cm)
alias cw="cd ~/catkin_ws"
alias cs="cd ~/catkin_ws/src"
alias cm="cd ~/catkin_ws && catkin_make"

# 아래 alias 두줄은
# 첫번째줄은 bash창을 여는 명령어 설정(eb)
# 두번째줄은 bash창을 열어서 작성할것을 하고 저장하는 명령어 설정(sb)
alias eb="gedit ~/.bashrc"
alias sb="source ~/.bashrc"

export TURTLEBOT3_MODEL=waffle
export WEBBOTS_HOME=/usr/local/webots


export ROS_MASTER_URI=http://localhost:11311
export ROS_HOSTNAME=localhost


****************************
/scout_webots_interface.cpp:14:
/usr/include/pcl-1.10/pcl/pcl_config.h:7:4: error: #error PCL requires C++14 or above
    7 |   #error PCL requires C++14 or above
      |    ^~~~~
In file included from /usr/include/pcl-1.10/pcl/console/print.h:44,
                 from /usr/include/pcl-1.10/pcl/conversions.h:53,
                 from /usr/include/pcl-1.10/pcl/common/impl/centroid.hpp:45,
                 from /usr/include/pcl-1.10/pcl/common/centroid.h:1098,
                 from /usr/include/pcl-1.10/pcl/common/transforms.h:44,
                 from /opt/ros/noetic/include/pcl_ros/transforms.h:41,
                 from /home/min/catkin_ws/src/scout_mini_ros/scout_webots_sim/src/scout_webots_interface.cpp:14:
/usr/include/pcl-1.10/pcl/pcl_config.h:7:4: error: #error PCL requires C++14 or above
    7 |   #error PCL requires C++14 or above
      |    ^~~~~


