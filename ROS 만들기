Teminator 설치
$ sudo apt install teminator
 
ROS 실행된 것을 그래프 보고
$ rqt_graph

ALT + Tab 프로그램 전 환

파람을 바꿔서 + - * / 전환 가능하다 
rosparam set /calculation_method 4
service_tutorial_1 폴더에서 파라미터를 변경해서 개산기 기능을 함 

#!/home/min/anaconda3/bin/python
# -*- coding: utf-8 -*-
###########     #!/usr/bin/python3 파이썬 3를 사용할 경우
###########     #!/usr/bin/python 파이썬 2 를 사용할 경우
##################     #!/home/min/anaconda3/bin/python  ## 아나콘다 됩니다.

    # print(sys.version)  ### 파이썬 버전을 볼수 있는 방법


기본 교육용 터틀쉽 실행 방법
$ roscore
$ rosrun turtlesim tutlesim_node

토픽의 리스트를 보여준다.
$ rostopic list   

$ rostopic info  
빠르게 Tab 연속 두번

$ rostopic echo /turtle1/color_sensor 
 토픽의 내용을 볼수 있다. RGB
 
$ rostopic echo /turtle1/pose
 x: 5.544444561
y: 5.544444561
theta: 0.0
linear_velocity: 0.0
angular_velocity: 0.0

x y 각 선속도 각속도 로 거북이의 움직이는 좌표와 속도 정보를 주는것으로 판단.

$ rosservice list

/clear
/kill
/reset
/rosout/get_loggers
/rosout/set_logger_level
/spawn
/turtle1/set_pen
/turtle1/teleport_absolute
/turtle1/teleport_relative
/turtlesim/get_loggers
/turtlesim/set_logger_level

$ rosservice info turtle1/teleport_absolute

absolute
Node: /turtlesim
URI: rosrpc://min-System:44041
Type: turtlesim/TeleportAbsolute
Args: x y theta


$ rosrun turtlesim turtlesim_node

$ rqt

$ rosrun turtlesim turtle_teleop_key
키보드로 거북이 움직이기

$ rostopic echo /turtle1/cmd_vel

$ rostopic info /turtle1/cmd_vel
Type: geometry_msgs/Twist
Publishers: None
Subscribers: 
 * /turtlesim (http://min-System:40333/)
 * /rostopic_29221_1649320158073 (http://min-System:40193/)
 

$ rosmsg info geometry_msgs/Twist
geometry_msgs/Vector3 linear
  float64 x
  float64 y
  float64 z
geometry_msgs/Vector3 angular
  float64 x
  float64 y
  float64 z





ROS_INFO("src.response.Message : %s", srv.response.s.c_str());


std::vector ==> {} 자료형 상관 없음

c++ 에서 거의 사용 python 의 list 같은 기능
v = {1, 2, 3, 4, 5}
std::vector v = std::vector<int>({1,2,3,4,5});




프로잭트 만들기 방법


1. $ cs
 소스 드라이브 들어가지

2. $ catkin_create_pkg 프로젝트 roscpp rospy std_msgs message_generation


3. $ 프로젝트폴더에 msg 폴더 생성
      yh_msg_2.msg  메세지 파일 입 력
내용
time stamp
int32 data





Cmakelist.txt

cmake_minimum_required(VERSION 3.0.2)
project(yh_tutorial_2)

find_package(catkin REQUIRED COMPONENTS
  message_generation
  roscpp
  rospy
  std_msgs
)

add_message_files(
  FILES
  yh_msg_2.msg
)

generate_messages(
  DEPENDENCIES
  std_msgs
)


catkin_package(
#  INCLUDE_DIRS include
 LIBRARIES yh_tutorial_2
#  CATKIN_DEPENDS message_generating roscpp rospy std_msgs
#  DEPENDS system_lib
)



add_executable(yh_pub_2 src/yh_pub_2.cpp)
add_executable(yh_sub_2_int src/yh_sub_2_int.cpp)
add_executable(yh_sub_2_time src/yh_sub_2_time.cpp)

{PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
add_dependencies(yh_pub_2 ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
add_dependencies(yh_sub_2_int ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
add_dependencies(yh_sub_2_time ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})


target_link_libraries(yh_pub_2 ${catkin_LIBRARIES} )
target_link_libraries(yh_sub_2_int ${catkin_LIBRARIES} )
target_link_libraries(yh_sub_2_time ${catkin_LIBRARIES} )


catkin_install_python(PROGRAMS
  scripts/yh_pub_2.py 
  scripts/yh_sub_2_int.py 
  scripts/yh_sub_2_time.py 
  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

