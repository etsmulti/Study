$ sudo apt install ros-melodic-teleop-twist-keyboard

설치


ROS turtle 이용하기 위해서 하는 방법

터미네이터를 여러개 분할하여 실행

터미널 1
$ roscore

터미널 2
$ rosrun turtlesim turtlesim_node

터미널3
$ cs
$ cm
$ rosrun yh_turtle yh_turtle_move


$ rosrun teleop_twist_keyboard teleop_twist_keyboard.py
Waiting for subscriber to connect to /cmd_vel


$ rossevice list
/clear
/kill
/reset
/rosout/get_loggers
/rosout/set_logger_level
/spawn
/turtle1/set_pen
/turtle1/teleport_absolute
/turtle1/teleport_relative
/turtle_circle/get_loggers
/turtle_circle/set_logger_level
/turtlesim/get_loggers
/turtlesim/set_logger_level


$ rosservice info /turtle1/teleport_absolute
Node: /turtlesim
URI: rosrpc://min-System:41777
Type: turtlesim/TeleportAbsolute
Args: x y theta

python
from turtlesim.srv import TeleportAbsolute
self.client_teleport = rospy.ServiceProxy("/turtle1/teleport_absolute", TeleportAbsolute)
self.client_teleport(5.54445, 5.54445 - self.radius, 0)
        


$ rosservice info /clear
Node: /turtlesim
URI: rosrpc://min-System:41777
Type: std_srvs/Empty
Args: 

python
from std_srvs.srv import Empty
self.client_clear = rospy.ServiceProxy("/clear", Empty)
self.client_clear()



연습문제 4번 왜 정확하게 거북이가 안 움직이는지 이유?

통신을 하면 purlish 값의 오차가 생긴다. 시간의 오차가 나기때문에
완벽한 리얼은 존재 하지 않는다.
리얼타임으로 보내도 그 자체가 없고 몇도 돈다는게 리얼하게 정확한 각도로 안 돌수 있다.


여기서 중요한 개념이 나온다

오픈 루프
일방향으로 명령이 내려지는것

클로즈 루프
피드백을 통해서 정보를 주고 받아서 보정을 한다.


$ rostopic list
/rosout
/rosout_agg
/turtle1/cmd_vel
/turtle1/color_sensor
/turtle1/pose


$ rostopic info /turtle1/pose
Type: turtlesim/Pose

Publishers: 
 * /turtlesim (http://min-System:36951/)

Subscribers: None


$ rosmsg show turtlesim/Pose
float32 x
float32 y
float32 theta
float32 linear_velocity
float32 angular_velocity


$ rosservice info /turtle1/set_pen
Node: /turtlesim
URI: rosrpc://min-System:49289
Type: turtlesim/SetPen
Args: r g b width off

$ rossrv show turtlesim/SetPen
uint8 r
uint8 g
uint8 b
uint8 width
uint8 off
---


$ rosrun teleop_twist_keyboard teleop_twist_keyboard.py

Reading from the keyboard  and Publishing to Twist!
---------------------------
Moving around:
   u    i    o
   j    k    l
   m    ,    .

For Holonomic mode (strafing), hold down the shift key:
---------------------------
   U    I    O
   J    K    L
   M    <    >

t : up (+z)
b : down (-z)

anything else : stop

q/z : increase/decrease max speeds by 10%
w/x : increase/decrease only linear speed by 10%
e/c : increase/decrease only angular speed by 10%

CTRL-C to quit

currently:	speed 0.5	turn 1.0 


$ rosrun yh_turtle yh_turtle_keyboard.py  


$ rostopic echo /cmd_vel

linear: 
  x: 0.0
  y: 0.0
  z: -0.73205
angular: 
  x: 0.0
  y: 0.0
  z: 0.0


$ rostopic info /cmd_vel
Type: geometry_msgs/Twist

Publishers: 
 * /teleop_twist_keyboard (http://min-System:45129/)

Subscribers: 
 * /yh_turtle_keyboard_12750_1649648445354 (http://min-System:41761/)

$ rosmsg show geometry_msgs/Twist
geometry_msgs/Vector3 linear
  float64 x
  float64 y
  float64 z
geometry_msgs/Vector3 angular
  float64 x
  float64 y
  float64 z
  
  
$ rosmsg show turtlesim/Pose
float32 x
float32 y
float32 theta
float32 linear_velocity
float32 angular_velocity


















